#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 8a365339-8890-419b-ba53-6626cbd3ee78
# Source File: ..\Documents\SAPIEN\PowerShell Studio\Projects\LabSoftwareDeployer\LabSoftwareDeployer.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
SwIAAB+LCAAAAAAABACFkltPg0AQhd+b9D+QfTShtMUijXQfTINp4i2l8dUsMNjVZZcsSyv+eoeb
aaPGlxnOMvsN54RgC4k6gK7XzDA6HllW8KTVGyTGimqZ7LWS/BPSFQmZKIG0hyEXBvSKXEyKcnbd
1Lxradc+ctH2rK0lVjwhLRzxz6BLriSdT6aBM4j+HZJhs6Y+c72F6y5t319O7cvZMrZjtnBtz5t7
SZy6AFd+4PTD/dX+q3d1ARTBp3KAK5HiOss53Vb2opfWTcUFup0SGhmmTVU0Drpdf01a0Z7pJqKd
rjChLWSgQSYQVjIxaG5FNvKg3sG+FSpm4gVDI7R7LpsE/6H/wov26mjfMy5DpXPkZYQOqon9DNiJ
zuZ3LJ161PyVSyaagQeWA71jcaQyc0Q7ayiEqkEjr8A7gfNjeDwKnLOf5wuYFpTaSwIAAA==#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2017 v5.4.142
     Generated on:       8/1/2017 6:53 PM
     Generated by:       riley
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2017
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
ZAMAAB+LCAAAAAAABAC9k99Lw0AMx98F/4djz+Xa2tU6uBZkshdBxYn6mnbpOLwfI7lz9L93mzJF
HwSRkpd8E5IPIYm6x86/Ig1XEEDsHNbe1ZMzmU+a0xMh1C3ptXZgFtrgDVhslgEoxI3cMKv0R/ZQ
c8mMtjUa+aA/I0NjufNkdJuIxw/WVGZ7S8Q8mhAJa4cxEJhE3MVdj+4ahwf/gq5uqwrKrjzPZ8UU
s4uZSo9dv1OWAwe0YzDkk3Yrv2W58GR5FOJ+U+OACLbarf/Cyoq+7Ks+z1dlBgX8znq2ZpSZ5p7w
/0FH+X7yKv36Vc0baArZVmQDAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	[void][System.Windows.Forms.MessageBox]::Show('This tool should only be used to deploy software to Labs!', 'WARNING!') # Casting the method to [void] suppresses the output. 
	[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic') | Out-Null
	#Import the sccm module
	Try
	{
		
		Import-Module "C:\Program Files (x86)\Microsoft Configuration Manager\AdminConsole\bin\ConfigurationManager.psd1"
		$siteCode = [Microsoft.VisualBasic.Interaction]::InputBox("Enter a SCCM Site Code", "Site Code", "CCM")
		Set-Location $siteCode`:
	}
	catch
	{
		
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show('There was an issue loading/accessing SCCM. Ensure you have the Console installed and the needed rights a', 'Error') # Casting the method to [void] suppresses the output. 
		
	}
	
	#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
BPnfwn/6r2/8/v8DqOslsYxjAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formLabSoftwareDeploymen = New-Object 'System.Windows.Forms.Form'
	$buttonAppRemove = New-Object 'System.Windows.Forms.Button'
	$buttonAppAdd = New-Object 'System.Windows.Forms.Button'
	$buttonCollRemove = New-Object 'System.Windows.Forms.Button'
	$buttonCollAdd = New-Object 'System.Windows.Forms.Button'
	$listboxSelectedCollections = New-Object 'System.Windows.Forms.ListBox'
	$listboxSelectedApps = New-Object 'System.Windows.Forms.ListBox'
	$checkboxOverideServiceWindow = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxRequired = New-Object 'System.Windows.Forms.CheckBox'
	$textboxColl = New-Object 'System.Windows.Forms.TextBox'
	$textboxApps = New-Object 'System.Windows.Forms.TextBox'
	$buttonDeploy = New-Object 'System.Windows.Forms.Button'
	$buttonSearchApps = New-Object 'System.Windows.Forms.Button'
	$buttonSearchCollections = New-Object 'System.Windows.Forms.Button'
	$labelSearchApplications = New-Object 'System.Windows.Forms.Label'
	$labelSearchCollections = New-Object 'System.Windows.Forms.Label'
	$listboxApplications = New-Object 'System.Windows.Forms.ListBox'
	$listboxCollections = New-Object 'System.Windows.Forms.ListBox'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formLabSoftwareDeploymen_Load={
		#TODO: Initialize Form Controls here
		
		
		
	
	}
	
	#region Control Helper Functions
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]
			$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]
			$DisplayMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		
		$listBox.DisplayMember = $DisplayMember
	}
	
	function Load-ListBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
	
		.PARAMETER  ListBox
			The ListBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ListBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ListBox $listBox1 "Red" -Append
			Load-ListBox $listBox1 "White" -Append
			Load-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Load-ListBox $listBox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListBox]$ListBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$listBox.Items.Clear()	
		}
		
		if($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$listBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)	
		}
	
		$listBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$buttonSearchCollections_Click={
		#TODO: Place custom script here
		#empty the box
		$listboxCollections.Items.Clear()
		#Get the Collections
		try
		{ #Get the Collections
			$cols = Get-CMCollection -Name "$($textboxColl.Text)*"
		}
		catch
		{
			#Catch any errors, normally a permisions issue
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show('There was an issue searching for a collection, make sure you have the correct rights', 'Error') # Casting the method to [void] suppresses the output. 
			
		}
		foreach ($Col in $Cols)
		{
			#Loop though each collection and add it to the list
			Load-ListBox -ListBox $listboxCollections -Append -Items $Col.Name
			
		}
	}
	
	$buttonSearchApps_Click={
		#TODO: Place custom script here
		$listboxApplications.Items.Clear()
		$Apps = Get-CMApplication -Name "$($textboxApps.Text)*"
		
		foreach ($App in $Apps)
		{
			
			Load-ListBox -ListBox $listboxApplications -Append -Items $App.LocalizedDisplayName
			
		}
	}
	
	$buttonDeploy_Click={
		#TODO: Place custom script here
		#Make sure the user selected some stuff, we don't present an error because not selecting any thing would not deploy anything
		if ($listboxSelectedApps.Items -eq "" -or $listboxSelectedCollections.Items -eq "")
		{
			
			return;
			
		}
		
		#Loop though the collections and apps
		foreach ($collection in $listboxSelectedCollections.Items)
		{
			if ($checkboxRequired.Checked)
			{
				$deployPurpose = "Required"
			}
			else
			{
				$deployPurpose = "Avaliable"
			}
			foreach ($application in $listboxSelectedApps.Items)
			{
				
				try
				{
					
					Start-CMApplicationDeployment -CollectionName "$collection" -Name "$application" -DeployAction Install -DeployPurpose "$deployPurpose" -OverrideServiceWindow $checkboxOverideServiceWindow.Checked -RebootOutsideServiceWindow $checkboxOverideServiceWindow.Checked -SendWakeUpPacket $True -UserNotification 'HideAll'
				}
				catch
				{
					#Error out if we can't deploy the app.
					#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
					[void][System.Windows.Forms.MessageBox]::Show("There was an error deploying $application to $collection, ensure you have the correct rights and try again ", 'Error') # Casting the method to [void] suppresses the output. 	
					
				}
				
			}
			
		}
		
	}
	
	
	
	
	$buttonCollAdd_Click={
		#TODO: Place custom script here
		
		foreach ($item in $listboxCollections.SelectedItems)
		{
			if ($listboxSelectedCollections.Items.Contains($item))
			{
				continue
			}
			else
			{
				Load-ListBox -ListBox $listboxSelectedCollections -Items $item -append
				
			}
			
		}
	}
	
	$buttonCollRemove_Click={
		#TODO: Place custom script here
		
		foreach ($index in $listboxSelectedCollections.SelectedIndices)
		{
			
			
			$listboxSelectedCollections.Items.RemoveAt($index)
			
		}
		
	}
	
	$buttonAppAdd_Click={
		#TODO: Place custom script here
		foreach ($item in $listboxApplications.SelectedItems)
		{
			if ($listboxSelectedApps.Items.Contains($item))
			{
				continue
			}
			else
			{
				Load-ListBox -ListBox $listboxSelectedApps -Items $item -append
				
			}
			
		}
	}
	
	$buttonAppRemove_Click={
		#TODO: Place custom script here
		
		
		foreach ($index in $listboxSelectedApps.SelectedIndices)
		{
			
			
			$listboxSelectedApps.Items.RemoveAt($index)
			
		}
	}
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formLabSoftwareDeploymen.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_listboxSelectedCollections = $listboxSelectedCollections.SelectedItems
		$script:MainForm_listboxSelectedApps = $listboxSelectedApps.SelectedItems
		$script:MainForm_checkboxOverideServiceWindow = $checkboxOverideServiceWindow.Checked
		$script:MainForm_checkboxRequired = $checkboxRequired.Checked
		$script:MainForm_textboxColl = $textboxColl.Text
		$script:MainForm_textboxApps = $textboxApps.Text
		$script:MainForm_listboxApplications = $listboxApplications.SelectedItems
		$script:MainForm_listboxCollections = $listboxCollections.SelectedItems
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonAppRemove.remove_Click($buttonAppRemove_Click)
			$buttonAppAdd.remove_Click($buttonAppAdd_Click)
			$buttonCollRemove.remove_Click($buttonCollRemove_Click)
			$buttonCollAdd.remove_Click($buttonCollAdd_Click)
			$buttonDeploy.remove_Click($buttonDeploy_Click)
			$buttonSearchApps.remove_Click($buttonSearchApps_Click)
			$buttonSearchCollections.remove_Click($buttonSearchCollections_Click)
			$formLabSoftwareDeploymen.remove_Load($formLabSoftwareDeploymen_Load)
			$formLabSoftwareDeploymen.remove_Load($Form_StateCorrection_Load)
			$formLabSoftwareDeploymen.remove_Closing($Form_StoreValues_Closing)
			$formLabSoftwareDeploymen.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formLabSoftwareDeploymen.SuspendLayout()
	#
	# formLabSoftwareDeploymen
	#
	$formLabSoftwareDeploymen.Controls.Add($buttonAppRemove)
	$formLabSoftwareDeploymen.Controls.Add($buttonAppAdd)
	$formLabSoftwareDeploymen.Controls.Add($buttonCollRemove)
	$formLabSoftwareDeploymen.Controls.Add($buttonCollAdd)
	$formLabSoftwareDeploymen.Controls.Add($listboxSelectedCollections)
	$formLabSoftwareDeploymen.Controls.Add($listboxSelectedApps)
	$formLabSoftwareDeploymen.Controls.Add($checkboxOverideServiceWindow)
	$formLabSoftwareDeploymen.Controls.Add($checkboxRequired)
	$formLabSoftwareDeploymen.Controls.Add($textboxColl)
	$formLabSoftwareDeploymen.Controls.Add($textboxApps)
	$formLabSoftwareDeploymen.Controls.Add($buttonDeploy)
	$formLabSoftwareDeploymen.Controls.Add($buttonSearchApps)
	$formLabSoftwareDeploymen.Controls.Add($buttonSearchCollections)
	$formLabSoftwareDeploymen.Controls.Add($labelSearchApplications)
	$formLabSoftwareDeploymen.Controls.Add($labelSearchCollections)
	$formLabSoftwareDeploymen.Controls.Add($listboxApplications)
	$formLabSoftwareDeploymen.Controls.Add($listboxCollections)
	$formLabSoftwareDeploymen.AutoScaleDimensions = '6, 13'
	$formLabSoftwareDeploymen.AutoScaleMode = 'Font'
	$formLabSoftwareDeploymen.ClientSize = '870, 507'
	#region Binary Data
	$formLabSoftwareDeploymen.Icon = [System.Convert]::FromBase64String('
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')
	#endregion
	$formLabSoftwareDeploymen.Name = 'formLabSoftwareDeploymen'
	$formLabSoftwareDeploymen.Text = 'Lab Software Deployment Tool'
	$formLabSoftwareDeploymen.add_Load($formLabSoftwareDeploymen_Load)
	#
	# buttonAppRemove
	#
	$buttonAppRemove.Location = '348, 383'
	$buttonAppRemove.Name = 'buttonAppRemove'
	$buttonAppRemove.Size = '28, 23'
	$buttonAppRemove.TabIndex = 16
	$buttonAppRemove.Text = '<'
	$buttonAppRemove.UseVisualStyleBackColor = $True
	$buttonAppRemove.add_Click($buttonAppRemove_Click)
	#
	# buttonAppAdd
	#
	$buttonAppAdd.Location = '348, 354'
	$buttonAppAdd.Name = 'buttonAppAdd'
	$buttonAppAdd.Size = '28, 23'
	$buttonAppAdd.TabIndex = 15
	$buttonAppAdd.Text = '>'
	$buttonAppAdd.UseVisualStyleBackColor = $True
	$buttonAppAdd.add_Click($buttonAppAdd_Click)
	#
	# buttonCollRemove
	#
	$buttonCollRemove.Location = '348, 159'
	$buttonCollRemove.Name = 'buttonCollRemove'
	$buttonCollRemove.Size = '28, 23'
	$buttonCollRemove.TabIndex = 14
	$buttonCollRemove.Text = '<'
	$buttonCollRemove.UseVisualStyleBackColor = $True
	$buttonCollRemove.add_Click($buttonCollRemove_Click)
	#
	# buttonCollAdd
	#
	$buttonCollAdd.Location = '348, 130'
	$buttonCollAdd.Name = 'buttonCollAdd'
	$buttonCollAdd.Size = '28, 23'
	$buttonCollAdd.TabIndex = 13
	$buttonCollAdd.Text = '>'
	$buttonCollAdd.UseVisualStyleBackColor = $True
	$buttonCollAdd.add_Click($buttonCollAdd_Click)
	#
	# listboxSelectedCollections
	#
	$listboxSelectedCollections.FormattingEnabled = $True
	$listboxSelectedCollections.Location = '382, 55'
	$listboxSelectedCollections.Name = 'listboxSelectedCollections'
	$listboxSelectedCollections.SelectionMode = 'MultiSimple'
	$listboxSelectedCollections.Size = '334, 186'
	$listboxSelectedCollections.TabIndex = 12
	#
	# listboxSelectedApps
	#
	$listboxSelectedApps.FormattingEnabled = $True
	$listboxSelectedApps.Location = '382, 291'
	$listboxSelectedApps.Name = 'listboxSelectedApps'
	$listboxSelectedApps.SelectionMode = 'MultiSimple'
	$listboxSelectedApps.Size = '334, 186'
	$listboxSelectedApps.TabIndex = 11
	#
	# checkboxOverideServiceWindow
	#
	$checkboxOverideServiceWindow.Location = '722, 144'
	$checkboxOverideServiceWindow.Name = 'checkboxOverideServiceWindow'
	$checkboxOverideServiceWindow.Size = '150, 24'
	$checkboxOverideServiceWindow.TabIndex = 10
	$checkboxOverideServiceWindow.Text = 'Overide Service Window'
	$checkboxOverideServiceWindow.UseVisualStyleBackColor = $True
	#
	# checkboxRequired
	#
	$checkboxRequired.Location = '722, 114'
	$checkboxRequired.Name = 'checkboxRequired'
	$checkboxRequired.Size = '128, 24'
	$checkboxRequired.TabIndex = 9
	$checkboxRequired.Text = 'Required'
	$checkboxRequired.UseVisualStyleBackColor = $True
	#
	# textboxColl
	#
	$textboxColl.Location = '12, 29'
	$textboxColl.Name = 'textboxColl'
	$textboxColl.Size = '334, 20'
	$textboxColl.TabIndex = 8
	#
	# textboxApps
	#
	$textboxApps.AcceptsTab = $True
	$textboxApps.Location = '12, 265'
	$textboxApps.Name = 'textboxApps'
	$textboxApps.Size = '334, 20'
	$textboxApps.TabIndex = 7
	#
	# buttonDeploy
	#
	$buttonDeploy.Location = '746, 84'
	$buttonDeploy.Name = 'buttonDeploy'
	$buttonDeploy.Size = '106, 23'
	$buttonDeploy.TabIndex = 6
	$buttonDeploy.Text = 'Deploy'
	$buttonDeploy.UseVisualStyleBackColor = $True
	$buttonDeploy.add_Click($buttonDeploy_Click)
	#
	# buttonSearchApps
	#
	$buttonSearchApps.Location = '746, 55'
	$buttonSearchApps.Name = 'buttonSearchApps'
	$buttonSearchApps.Size = '106, 23'
	$buttonSearchApps.TabIndex = 5
	$buttonSearchApps.Text = 'Search Apps'
	$buttonSearchApps.UseVisualStyleBackColor = $True
	$buttonSearchApps.add_Click($buttonSearchApps_Click)
	#
	# buttonSearchCollections
	#
	$buttonSearchCollections.Location = '746, 25'
	$buttonSearchCollections.Name = 'buttonSearchCollections'
	$buttonSearchCollections.Size = '106, 23'
	$buttonSearchCollections.TabIndex = 4
	$buttonSearchCollections.Text = 'Search Collections'
	$buttonSearchCollections.UseVisualStyleBackColor = $True
	$buttonSearchCollections.add_Click($buttonSearchCollections_Click)
	#
	# labelSearchApplications
	#
	$labelSearchApplications.AutoSize = $True
	$labelSearchApplications.Location = '12, 244'
	$labelSearchApplications.Name = 'labelSearchApplications'
	$labelSearchApplications.Size = '101, 13'
	$labelSearchApplications.TabIndex = 3
	$labelSearchApplications.Text = 'Search Applications'
	#
	# labelSearchCollections
	#
	$labelSearchCollections.AutoSize = $True
	$labelSearchCollections.Location = '12, 7'
	$labelSearchCollections.Name = 'labelSearchCollections'
	$labelSearchCollections.Size = '95, 13'
	$labelSearchCollections.TabIndex = 2
	$labelSearchCollections.Text = 'Search Collections'
	#
	# listboxApplications
	#
	$listboxApplications.FormattingEnabled = $True
	$listboxApplications.Location = '13, 291'
	$listboxApplications.Name = 'listboxApplications'
	$listboxApplications.SelectionMode = 'MultiSimple'
	$listboxApplications.Size = '334, 186'
	$listboxApplications.TabIndex = 1
	#
	# listboxCollections
	#
	$listboxCollections.FormattingEnabled = $True
	$listboxCollections.Location = '12, 55'
	$listboxCollections.Name = 'listboxCollections'
	$listboxCollections.SelectionMode = 'MultiSimple'
	$listboxCollections.Size = '334, 186'
	$listboxCollections.TabIndex = 0
	$formLabSoftwareDeploymen.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formLabSoftwareDeploymen.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formLabSoftwareDeploymen.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formLabSoftwareDeploymen.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formLabSoftwareDeploymen.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formLabSoftwareDeploymen.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
