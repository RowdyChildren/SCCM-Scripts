#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 8a365339-8890-419b-ba53-6626cbd3ee78
# Source File: ..\Documents\SAPIEN\PowerShell Studio\Projects\LabSoftwareDeployer\LabSoftwareDeployer.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
SwIAAB+LCAAAAAAABACFkltPg0AQhd+b9D+QfTShtMUijXQfTINp4i2l8dUsMNjVZZcsSyv+eoeb
aaPGlxnOMvsN54RgC4k6gK7XzDA6HllW8KTVGyTGimqZ7LWS/BPSFQmZKIG0hyEXBvSKXEyKcnbd
1Lxradc+ctH2rK0lVjwhLRzxz6BLriSdT6aBM4j+HZJhs6Y+c72F6y5t319O7cvZMrZjtnBtz5t7
SZy6AFd+4PTD/dX+q3d1ARTBp3KAK5HiOss53Vb2opfWTcUFup0SGhmmTVU0Drpdf01a0Z7pJqKd
rjChLWSgQSYQVjIxaG5FNvKg3sG+FSpm4gVDI7R7LpsE/6H/wov26mjfMy5DpXPkZYQOqon9DNiJ
zuZ3LJ161PyVSyaagQeWA71jcaQyc0Q7ayiEqkEjr8A7gfNjeDwKnLOf5wuYFpTaSwIAAA==#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2017 v5.4.142
     Generated on:       8/1/2017 6:02 PM
     Generated by:       riley
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2017
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
ZAMAAB+LCAAAAAAABAC9k99Lw0AMx98F/4djz+Xa2tU6uBZkshdBxYn6mnbpOLwfI7lz9L93mzJF
HwSRkpd8E5IPIYm6x86/Ig1XEEDsHNbe1ZMzmU+a0xMh1C3ptXZgFtrgDVhslgEoxI3cMKv0R/ZQ
c8mMtjUa+aA/I0NjufNkdJuIxw/WVGZ7S8Q8mhAJa4cxEJhE3MVdj+4ahwf/gq5uqwrKrjzPZ8UU
s4uZSo9dv1OWAwe0YzDkk3Yrv2W58GR5FOJ+U+OACLbarf/Cyoq+7Ks+z1dlBgX8znq2ZpSZ5p7w
/0FH+X7yKv36Vc0baArZVmQDAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
[void][Reflection.Assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
[void][Reflection.Assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	[void][System.Windows.Forms.MessageBox]::Show('This tool should only be used to deploy software to Labs!', 'WARNING!') # Casting the method to [void] suppresses the output. 
	[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic') | Out-Null
	#Import the sccm module
	Try
	{
		
		Import-Module "C:\Program Files (x86)\Microsoft Configuration Manager\AdminConsole\bin\ConfigurationManager.psd1"
		$siteCode = [Microsoft.VisualBasic.Interaction]::InputBox("Enter a SCCM Site Code", "Site Code", "CCM")
		Set-Location $siteCode`:
	}
	catch
	{
		
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show('There was an issue loading/accessing SCCM. Ensure you have the Console installed and the needed rights a', 'Error') # Casting the method to [void] suppresses the output. 
		
	}
	
	#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

#endregion Source: Startup.pss

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	#Sample variable that provides the location of the script
	[string]$ScriptDirectory = Get-ScriptDirectory
	
	
	
	
#endregion Source: Globals.ps1

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
lFYAAB+LCAAAAAAABADVvFev69iVLfy+gf0fCvVKo5kTYBtgpsQokSIpvlwwBzFHkb/+W6qyu93t
tl1V1+7v9jnYhzpbWlyTa4455hgM+v09S/otmw4xWqIfwIu56rs//Ij9G/rjH7+/fvjh99ZUFVUX
NXLVZGbUZn80oqqT+6n9t2HOfw//1ds/D4rrLFl+WI4h+8OPzjEvWftvftWl/T7/22fsz//+7of/
7q3f/eD9KQri35DP39/9IKzNsk7ZH7psXaao+d0P9ho3VaJlh9u/su4PMU1HZEJSKIsTGcKwP/7Q
gVD+8GMO9qdHsdPnyx5NmZgNTX+0WffjD0lZNekEhv4o9N0y9c388+GC2O2pH7JpOf60D25deieJ
mkyswMhPXOCj1O9+QPHfw3/+6D8aavRp9uMfZTDTPxwjNFXWLU51ggEMDY4dI4l/OOiS9N2f4wfv
8iAh0/FHjuN4jpO4n/9I3IUTXK3gOBn8cJfm5r4SUyh77fOu+Ggud/nC/enzYFyhfF4EqtaH4PPf
X1ozXO+S/MjMacH9BunkhiVhdcv9cXs03oBjgb5UDr7QcbylnO6m9g25chZicK/bngrl69WeV94w
5s74/jIE9Xo8ZzJECOc17K/X9c3Jw9O9cLeLyXMX0+SHrPNo/MyvS3VesfExojEBpSj1INU49sbX
PL5jGgpg6/vr5cGXIRq7Zk0DlqU7fGM9v11NydCcWunzgheqrLpxpc7twmcjfTaF/tq52z5fXtzF
2UGYYPMGsX1eCKTBSYYuXDlBmkXup4372XCry/GisP/L9zajeX3Lzch4N3qihlARy5fvr04uWgel
MY1/+KFQySemdAgE1dspcwsLqXhUJyyuyxzGE5dkwHkkJSL/cKig0ialqdpyNPmLsF96z/z+KlK0
RawSSzy20yB4DRi4HSpBeawezErDIpJ00A5s1ln8eWeIfeM5eTQKV7aufh8EZUSLKQn5IgYvxPdX
3zKp2yykvxseOAQTtsVEU1mWEJzSkwcrFxTN0AOFosWzg4iEsDI8Ft5TQ3FV98TFB24zdKa6yXbR
v78et6uohXqo2iwRX8XufuQ6hNZNXut39xptKs9W2kA9Xih0kaq2qZTogE3ruk+Nq7cPu7hY7vw+
onZ+tN9fV5q5mcz9Vk32KXnE/DzWYgKVEM3I9ESNVwI3h93vt4XCkijXD4x3BmNAxfCGcWXgKL3H
SVBGBM/uAXL6FG7O8wjvXUty/s0omvl1dMhRXzlN8nm/ka8y0jTc+CBjWsdmLpRQ0xpY9eyY0qvY
iZy718EasmabYG/7dc1xLNdkRX4rdBVqGB896JCcGy8UUE57YGtilnNMwYhhctGQnss9qTwelwaE
cHXiqVR8n78uh3es319kRckoduMiDR/YbSNKH2Vt/Vi7YAw6+6zQ8TbUl2BRQ7g8mERVwsN+SHNO
hr3OyeaUFVc0tw++S0/v+wtt3GV/q9VQ1RyNuzu6kBZa5BNk3ab7WZAKNYbNSzTRm7ljPgr2t+af
WZbFDiSLq609uazDjs5whH5/DYXOodeRLyvOZul7AKGCpF22lE7wBE3JxCDs2Lw/AEWtEbW3VGc+
IFFQtb31zzmymt6P2veSPjihar6/IjuiRhx53oa792IyEw85br1EQvtqlEsyNgbHPxUSPtui5y6P
e+PcuMvTlxxOuj5bDmz4z0aQyscL8JugyKUEiMK/FmDD/bQpL96V48ry6XqBiPBJt4dHFpov/ZW8
Xod/P0PVIpM2ujb88w5Ju2i+MQX3ACPxONVxZG56tXmeL295FUL/8AZA26+5oS7Xs3/U4iWraymu
TsFx3rpBPqZG6JOKQdvCdHpVNFQxitV6/v4yt33l3ygadKOY10+UN8snTeUydXR0ONgVWl34h2IL
4+3oSEafO7IuIWNnPjNdwIxZakoM2zuv8eGAdfNSaDvya8GQmT57VC5EEreAyBEkM3fLvGX0ECky
np1Wmo/MvPEXh9ODT+buzmUP7lVIJoBTBEjqv78qf7e4iyeMqTYe4yTnFJ2Vh5Ka9OtRu4Zf57ZA
CffFLtiNUs5mvqEpbsoPnUKEDy+OwtWNDkrq4bP4/oKFAlbDpjCGWEL5sUGvk1/LFliTy75koWMa
BH6iZ4E9t9o2a++YZjVbOse7sOa7mOf7rhVO+3S0mMDBuhk6XiJRWAnBLbrsqL0pwQzfngL0MvCT
wY+Fuip3OkcMzG3xbRht04eox112bmA95RDBXHvwWyhXD8C9L9ooXRkhmGh95+ngHBi3vrLLdGWg
d45rfsCe2RsxWNotDOoePovbneMTpENAxKTYQalfSY44uLMPM99fjfNGRQbsMu9qj6D3aXntKltR
1SOyR3ZUr/MAFocXAFKq3IoLzSPSDgnPF7rIXFZPMb22wmhxIzbY31+K1N8PKCZI0u4Umbowi0Iv
C+cyV/VCvrqOge7GCz4ru3lgN0jBMFgiab2cl2GKaEl7uAVQBgVpnLY+gCw4yVOokNnc0q3WG2Iu
Vw7BYjGM8zI9p93KdkJGGOiBLc7qHm/3Gj/l0JKaYSIHl2r7ktsn4m0a9+j6/YVA8SkZcOtY4RHa
RmtF+N1fjV3Ud8valeCFRXbLkpSNIybnxg8IW0dKe/SfmGrR3ZG1eHXsABebDPAGXyKIdT0dOoxo
UVeWFR+SohTGXKn9QOOWT9ZDeGa7sj81Q/VK0HW84w3o995e3/xL0wOe0uf3bklPBHQZtgSa8l4/
pP4t9c3buF/pOKN5OWfWOD8olOvfD71ezGVg1CnCTJvnvGOmfXJ9KagKGF/UKC24OzkJckqfSkvM
rePSb0FAN5dQo/dMYdeSnmLMVCPnsgV1srQa9IKy4gKl0w17rsP6BDVKIpd7MBHI+7HWD+Itf38R
ZKKqTerAYhws1eRA7ikKqLTqkkseOdeYy1PNlGW7EtBKU65JUp2zHoL2unH9a7fc0g/h0cngoRbZ
76+F6WryhU9Y1zDPMxFrN8GdJL1VvagfHr4A7M4RpF8Lj4Rs9biq5B4/j90pUA+5IwPpXngDX91H
fKnO768EUzLLhZUXudBZcGevgO964tjWqbwD+mwM3tEYOafdThjeSgSPrreuBALytRGrO2Pz6JPP
BKeRSwgYKbUbNldrlVPgkcrEaWDg87Vv9Vu3w7k5rj4/0IghhtAtgJ4r+w5KKibKDGdpCx0iWRnX
iy48OdQcWNBPGbYVh3eZqDYfV9ELDQIiVz+1iVlsEBQpGaC6rAslPsPwqiZ0Sj9QhvHr8N1k1TVG
k9EpZbFzSSO4f385CSVfujdxPyE7ho67lhTojbsWYuYZLwrKbCObCNZoTHjb6LZuezxdnv5y3hDf
Rv32ZOKnGfhHz8J2CFT0QdrNZsWYJ2iVVwkuxMB7UMz7DRyNJ3XBUxtfRZndDshyczXdn3MT59hc
GCm1wnXKQ9AIGQ08xJQCtKUNg5aEMEicWBCmuXDQa8+3Iye3kT35Q3qUpfZKzgbKxmuCnxgivCrq
cXrdtN7kWYjaZ99ByfS+RBqIrcm3h9CVzGNncozG5KzLUZ000Iw9GWxBYyEuktyyH3yqk7AV+IWB
7LO2Af6mu2cv3SdHBghrXgE5x0AN6hXvEG/ObVfIOivhtql33Nv2Ju6mC0XawfZAn8pkgkPckq5f
N+t67S8KzqrxMadoPAZ5cNZxnz4I9ftLpZvTQCm685M10LTznNe2LMSpwH3QtHBCvWynODh85USu
SbSvGVTQkzxCjdlx5YJLjhUc1wfCPF58BjogTdDZVeEORtpw91VQOzT+lNPbaemwICaU3b8jnzlO
BSVHCrsNENy8aOjqU3QdZRgAq7WVhOBWKVBcEDOd4gp6phE/2q15tKvtXkKKzS4NS5xGsxD3w99s
9PHOe2ZbCJKKsmhipKYy+ORqH8Ma0rfDmIKVzQGTrzg80SuO2o7jU7nZmx79JE1M1LyenUqSgXtL
XcuRTMWHKjNwGhLii7Zfroci3ZMTiOU1B+cba3ocKC7OfeJ8tLFgMm3RmxVp+b64p8pA9FjmBsWy
bCRih9AyeY+YETapAToATvElv6giBLeXc1YFvU9bfQIK/6UppaxYd0tmICOoSGnQepFruZYS+BAU
WftAXtUZs0v6ZHDTtp6A/UYcv8h3E7Hy7sZ2JETRRLqYKQkqax/5hsnaTJGReRnVuHo5nJiW2hAX
ZKwM/ZBLixkhWY0z+PVpZtbpUx1QB5a2bB4mS7awqJw2BFeq+/46d+LskCGAWG657XpxLY9np3jz
O2uhasqRtLuqDxxDRTodVcC5BGXRy5vfreeqDJH0GKBc2MQL5mWoCNiy2K+FHGgktzZb+MTIqcim
SAXcGL/rFEEfedu1JZniTEebW3YgpabGQPK8GSuoFP9AXfLlkBznawHogL523fEYvsSuE5m4g80T
EJ0WLk7uSPdBnZMFnmDp8FiEtWgs/RFfATtD8qjSl8bXFnftQ+sk/NCNIh/UQn4ChQGXxFVG1fjC
v4GIqYkNjyFQJPLxDAUSxp25E/qymesdtoDxRhEE2INSHhqOiG9PqCQx6u3jQDkEahRPwsg49ws3
UhzaXQvzlbTxQdKJ3y4UBa1ET7cQ1qegNf+kDFXnsLb6xWwKSSmP7Sxwodhq6QBMbjC4jL0MrUUv
RMyF0EAYWEck2UZA0LsSWdBoKYreG9fbnelI+Jkbr8E15qGk0vCTov1hvqztsL0bBqAXdV+pbU7x
kahX7KHxiP94JXjrYPdjG3GB8gV0eL00k7sJ3dMTt3RRc8USoamJV9qvygOCTvha6iOQ/t9fXith
L/85dk2BccACwO17i6MT6yOin07/7fIRjnvhccRKvEQrWnlRXsJyn5uNf1OU2MADUwdlHYZi8P3V
Lo1UrY30apLNTc07CQU8XT8BjZdmgJi3tF6i4rYL06yTyeV+seb1SNADHWZ1CRWL3YDG8wdnMFMG
+v7KSDXPradnd/buGZ6CLwujfpS+yG+gJ3L7shQ+emo2H5kM7bkk3EkJvBG0JrvBZVI0WEvi5gHq
JwEqukvgM4ZSBXrmYojUDcOsGCcdBQJBUxX50Dvb0w6S9DvDghcUPzCMwUA4Xx2LhTYvXRw2ftgG
znc/qsYh1+U0HBc27SvYcZbAC0lu+5MKDog24Mmr7mnB6+ZV1hmClnl4xRPNaJKpK/IHYnZdnM9k
jK7vrgBeZs8yIFElqE3CVZYGLM/wV3Z7RsVygq6oY2+Iucr2NJDPMR4iWn4Ad2vjOKoJaXfD3312
wmbQ5WHHrsv3113uuatb5PWmq9P7bKnYFgdbJ+Vb9vwwJoM3I1tePW3IO5VgzGTTNKjwNC2LHC2n
y4N/gSbYHipi1d9fb8I/udawnLd/2bqmbUWWIm9FsC/KYUPRcgc9gndAHPBZHkQeJtgr0jS07Wbg
f3PUZAj7BD6m35cCoHc7swcx3+dKYFL10DwNg1wr4w8CdHk/otXZu7V4fI7h+VjKMcBjA2pATDuZ
WMBeNkqDvDhZlUdzPkBfoMVOG8HUooeCKuDrOo/hmoFB3gJZwg8yhF0DcpVsfZDcpPkcmMZ++vnQ
mBFlCFUYsAfytlgEsU4QG8Jb/ZO1q6Y10tSjBL1KsR0tvQtfaklwwd5XeLGSqSBaTxqpLXXb0RMd
VvpJfr2rRKcwxsR58k1i5veXeFMoWCdHm/CmU8jdhtyI+6DqMdMkdQWOHru6N4JfQmd4Ul1CMeI0
k3qghFURgTKmYJfAzD0Yov0EHOJlWYNktvKk01LheiSUDvch6mYmnBahHpIETNPHFd3NSygDuSQ+
xkAuT5aM6Tq3dD5wAyCyfIc3eHCkn3hgA+Mf5N4z4QJT3tLnsWCl2DkTsWQGsRv4pp/Tin5lCsOd
D998Pt8q8JkrwzcQTSn0MWlwx5ot0L1yShvkHHHLGWKvEn6CBrHt0IZ7EbK8NPpkgAHppgxZFvky
LHWiUjx5UBYQtP3VtN+h1KEChzWWeAGxvVkmt2cbzg2AOTJpm10gjkW7zmvuAHUZZ/s9dUs6xwyU
NuHcUaMKkKYCk0jSQgZZARPv1DN7qzbEBdyLnyyqArGXpi2tLMlsmqtin8c5I0ScRGO4IsPHus3U
ulR3bKnj9/nY4dyqbSM5DPctjf2dKB1bTI7vL7dj60IDWqdpsAw3Qo6uNY1YUfixhoNyHd2ArV8m
SyZ8kq/4PNmuRzEDY9/zukIectVmu6mGzNVWcez769m0IysU2v1RB895XF3nhZlscGIYRLxgFoVJ
HEG3JegMqCjkMyP5tdMBIZmT254Q619u8l6GgHFHKPn+sqQMKXlT5n5SKpIas6e5n/gSwYS5emHV
Okdu46PPQOpFDNkZdMLW6M6SMpuY2DTg6+PdV5ggh0WgovHsvcZY1FgPVNOiuHZioFK6M5zw6TEu
E4PK8VVkILup3WoiJJyN3XODIPi1I6ht4gF6HbbujrfvVAW93gtgV3kNb710SwEBYdRX2SoAv+En
U4R4grKtEIyvpufvtP7C3jmmtaC3pjLovxUTVUlA7vl49kL96D/ne108ndwdaLJ1gl8sDScLu8on
OePmWgN+ATO/XUUSXrsXFFualxCcZCxI7g2XBZbjZtCrc3rBtaIBOmSXHO6yZirZFKGgYM8Wh8Xc
g+wuxtGhh6EkrQWXwi3TC6aHBFtkgkNZ5pLsCze8bRnQ6GATiQL0TH9/CQyapay6FhowGlTeWorN
rzcwg8EL1myfF9KUt6P1te1kkJ7goXZk3mbejDF1ahjreePYjImWjyz/AG439o8VeOXrnlICblyb
blllkRCz4/2s5ZvAicW5MIKcKG6DbfTHxxJBsKIinsr2ucPpgg1bnU5RNO3AyxCMjbvaRJF3BzaO
Vt36mKuWTHELxPTSJ9kipVSIHBE1IbE0CXK75LVPBDRE5gGtVEq0oLkSZfobAdyri5PHYjHL2Pvz
JPeNRt1ySd2RgQUM8LEcncY43Cv9XYKfcWBX3mugG38hcy3pmuWZBJa9smMc0RSoBRjdjzPLrE5A
KDRP28BtPEiOqLwj8/DYzGCGjoIstEqLgOFnL5xcatrVay/Ds4dadDD3PaOUSY6iLQVHeixT250L
Kr4s1zge253K+rsT9J0EpdDN6L3lJZOstZE59F6vXmVfowSW/NaC9qadcAlFys/5MCJ1QdVfIC+S
yQnmTh+KIPyTQwbC3oPxroNilB4QA4SD2UeBEs38NTffoBNJF7Mizn1vHtVqXdSPWQDKtwKa3Gjv
5ozUcMDafZKq85jier7mohRThCUr3aux7m4mxmHYjwFHydEsy/HIacaRnOSIvHf95es8w43eDlwb
2FMVMWKXWsKAhNOJPA5ff79D3HPzlvI5x5781pnm9Bz8jrfuZ7i93GxGOGfPOSUOx+XqEWaFkssC
YivxrrwCKOLjPg37pM5sRJXqk57VnVuVU6lmvPUEMkh5+xYtAP+JDRKFFB7kbaC/DvvCQD7Zjvs4
e99fB3YH3DXNM9/62GvjmEIt0nPUt1WRQxBcIg4u/TDZLgV2ZAzHZ4XSegP1WncUJSiCgJjkCo9x
RBZBbInFIdFk0d5O+SIhcActP1vQiUTNf7pUFI6jOkxo55LCppZnAcggdHMf8h/9FL6jSXidAeJX
+JWUEMBv5GHKK/7WZOdpokmp+6Xy2WtxIK37RjEkCusL6X7O5dNY7xG+2z4IQ2z0YNgCz0BTKksV
0FXH7aqCqrfrR/CsuceYh3p6wa7A29xwWr3E/lubXfLpQag4ObXe7Dd9vb4RKEBlB/GmKf2soeVy
0PZGHyK7qiP+OaeaLpSlyUjSOQ2UjHdnjJ+nluni69JO6Fq0RDd4xBN9333CfuDoQiVVjNcIsnev
l48ncEKr+U2J6Ayo6NvZPO2Cn51JadaQ7HSC2AC5o77UYZh0XCB6iT5+1OIOEbjbnmRaHh+07blU
D2KtEduGt+FhNBO+wEA5MDyFLxgM99Ha2AXgRtCutuF5OoBTrFq45lobTLE+6J9iEuorJizarKDs
g/SOPPLv/WXl922gEOj1/fW435WXDmyxoVvLHEXQRYzFzFJG+KEED9Kfho5WBlgEKkjbr/5L8w8p
mSKJWUFahv7iKzudMqvN3Xigokc7d9E3Nwd1o2h5ZLiwzRwa8qYQ5KFe24hAl66cX8H6BNoluMk0
xI4jHJfesEvcxdvW4aFlR1+0Cf4GCMksoC43/uaQ7ymWL53BAHrygIoTm1Yez5n232ST0k1vSLt2
Uddleaow58W3x9MBPKNa3iYO5MsaKBAbWyn6pQor0ElQ+KzVgZiDzEEf2aSf5wthTXdLV3J/cXyI
ol1DQky89q9H3fOckH34RZvFK1laDleDvtBvVimo0EEe1RZch4wJRwgdJtpq5mmuPEoPL9xq6LGJ
305EvudI64PPkhZjJJtKyua1XS5mCx8IKYHuDK+QzrMv2p7wAy/ICIGuKAObsbnE0q4QqG+boU7Z
wOdLon/mx+Fl1kuoysGMJoI1jXdpMk9lzmuK3gAj2bcsYb1XNGNycnW6c6d/Om95F7Xw1YYXrMBE
FsOz3Y58pj24rFpvnF5r+4kArYBl5CdLTcaANIMjld9pBRtB9oTfSHh94/E6ldMUtspyWqbTyfpz
0MnuYpTOhUlxRfioQKGxbo0zkC6T4BMEF/bNAutrgb6wlv2L0+hq4RsmUef8ss9vdvBuwbzcqvE9
fDSmeclaci1MaOlCbK58sggpriYiXCO9mODJHuqTuh/BkYbS1jClP0jaG33eUCnTFQlDuX6flDC7
xd2F8DW34Q/qOkQzZaGvHDqifeYb2otjoGxQVh3ZXHivdA66THkwud6+BMHZlVtKvz5nLQzcLDsx
jJ9elOwEbT+TrHWWFQZtGeF7WDxbOF8oGwQZ/NSH8XfLOHpzfn9dMXZ8Ta+E8Q/rLoZ45ka1tklx
znROOVJwBvTQweDU+iauhQK8+R6TU75gjJZt6uolo30fLWQFHuoFFD7hOe3l9ThNT+zmq22QzgRZ
M9I+qmAZ6NKXuf4x4j3zwOafFKwPwpqtGwpD650TSiCs51qlWfiKQ+TnikDRebBUekQft91I+8Pk
dXd+ujlYVutBUqMUNXTmdt9XOJ0hrF3gcAz1l7Fy2jI9EEafbTrTy66gAEIeQzQq6kx/rqLHsf2m
gRL5yfEE+hEgXsQJQS/mE9ndUpypoE6HRQTLVF3BaJ/ussyX+xb3to2kWuCdW7yc4ne6CgyN+MRL
ul1a4AMzOLUSDqiVCLKA8gN4tjz7mb9WodfCfkplbmZys6exdFOzosEfvgZfAYdcjhsX97ypBRFu
nvZNsRzPYU0GZvfLFQuFq67Je5xGdJHnZ+3Iw0SaWjqNm3je0KSnzS3aV6d5phclAH2B45+NO3bF
z/2Bn5rIOok78Qwc54Kap2s83UG9AoX5XmXnMP0h94gpzRa/6k/LnvaaDeyBFg2uIr6/VPuG8nq7
zcQDT/Xo0Bu+G5MRMhFDIIT4Yd3xBEe9pyNqsSNKD38VEZy7BHujKj0uffxEmF8pZnQaUAukT5mg
/tZb9CDjR1juBHYMw1vRnp6p3Q+lSNNhYIOpd/Kip5nysKL2IqOQilJqfn1vjf4GOkZoZQUBPUvE
EEjcWXQh7Wt73E/L10Jdl420U/E+v0L396Ahd6zPZRifYjSNFXTV1Lm+H60MfEyRnPVuvVFCFUPg
jMxhQVaMcniJCy0FUdxhdXsu0Bw8eGRZ2zNoTBvGbTxu1fUvr3//d1e/QZ3++fo3qOBbUz15sJE/
m4vzuUT6dBTJC7JmkkaXQDLURovrszKXdsdez7eBJ9VrfcSPqVyycgWuzXtWNC3IsVbjDOtgdkGa
p6+PpGty3InwKpyifmDBtgAqSeduC4srD3bGmDuExXL1XrVONDSnLwvv8v3FyZXR329r+3ZVmXsc
glD9zSP5+8fBgb395/sCQj8hVt7ln7pH3kkDQcpxBhZkshRnxB8BxzMxLkgFaZ2PnlTwa/QoPmcD
px0bcQS4thuHKLvNCw23lZH+sG9EdTyeY4SlEUMWOvcA6j1pPKHSH2VB/L1YyyfQIR4iS1e/W5Lo
ldiy3EfVXUOdiqtAM5HeU50gewRa1ufH0L3WAJ1YH6Qx5vfqFojxaxd2TUNQNSA+55FYiCmeGYXt
FdX5hZkwgOxQIiFZ0Iv2V4Mc5bVI1wisEXAY+MDaGwFxBr3GKwsFASzjHGiO5V5wKA/UIA5B7Lsu
UyluQ1AUIS/einXHip2d8cA1jxiWHpf+p94UwltwJA3ckgY386UbndP0qX7ci5G0/1wHtHVtLfYI
jxiP5Q1/cXade9bujd5sh1CjNTNXy6pgNK7SqGnjbAErcJflg1rgDCzafC8Ul7k5ZahO8vcXRpCq
RNzdKHQM3jywzyfejaAxfiU0TNRWC7FOZ2AH5d41xnTJgSL75J//jyt7EBN2E9yxn2tGOMkQdz1X
PwZvVDRjMEmOjz73mhzNKrgZQe/b7F9vl4C3h/I62PWVEXzIOkvhesW8GIbjQH6JNyv63FdDUY1k
18CdAd0G0rWoddrK/Sk/mJ/uJAqdYT89XnuG90HVopnLBEQJ6iWttKFWjygaeEcYEfRBS9JHRcsS
EWR676Cbh+G3wlxADjC8yQLoOHtFUjlSIBbj2F4FMT6HweX8HHKl6UCj6D0l7jAy9KQnOfoSv792
i0Vm3R+CiqiEWNaUtZwEU5+TMGjgeYHkTDDtDJGCBxU+BF0SU417Y3T9Ch4pdsGPThsa4C8+l0AZ
oJFGUky3/k4UUeh3JhBDGw5c+oN2VU0tOKtlZBc7w/cdNdjs9uIvj6GKXpiNM5mawm6dnpPG1oXX
3j5qUKLq2oTo1O1YkZNN4XapKlfDh9G2Dwp00Ce66DegPhzopS0zopLvnMCv0knzWH4JA/vJFAzn
SBzCDwZgS44Wn1I6XWCWJLEQW1zfy28C2xcSJxnoKwuaueog2DLoAua0e8qH7kHorgb6tJ6a6Vx2
GtOvZixNJXBt7BQ+LLhzXST9CcnM86jzIZ+yCz8LjnecVuqIl9R962ZotDG61dyE1PzM2LUtMsfD
NWLnGr/H/AJUTZ6tBNA78tyg4o6KhKqG0Xano5ynmHqerHOEI78QcDyJqBuPT1wXeFbvRADJDZSp
pPFYkY/XDw4CeJl0WtUgwhz0yaFhdXMI6ExuS9fmSxb1rHmeQuigLmEc5IUbRVkd1udlSDVf4XcU
IJxpQEcM9DoqsWsIsgCK/3rF7RlnK7S+iAUnDoElkT6UhOj7eS34/pD75kwXgjpzprlTedeG5nqT
vQtnOreetc9TS52mrUEH1E/lQTQX5Bw6svT7vKoAA5rOJRVp4LqaMCkjRr1OBvCou+HYaSGMN04r
7hLA/oDl4sImcV8cjzn/3Jlwm+z2sG9Mn7pa85xkbNCiQgwqDPxuZroHU+VaE7P56YilmGPsc2vK
ytCR2Ed8LTcrRRHbI3mbLwkGTlzo4Cax5DGanyAJj+lGek4tBZVoEBtziS100pht1akrx48384lg
LvN22Ccye0BAiG5pp2xNLVxIrZ8rKaVBqDSieFjL+8KAPUN4V2HkOmu9xq7PbH2zkAmcJJSXXF+w
55wlEQSfuHM4h6adTxUBZHDgfZSyFOC3HEapmKPjJc9K02jOO1kyRMpcVXe5aM3liesmScGSjUvq
eYOggkyIZToXiE+c07+B5iX1nAdazo3DQJephQdh3tOMfS0B6D00c0yu/mZaOqsqgpBppyR6T+rv
FmyMTxaGvfM6SNAbBT4eQ2C7MLt7FsA5Rj1foBauDUxI6euBme+1kWXCUPDWSG3byFUxZlXmXeV9
nsJ0YgI9X8z88KiSfFDODpB7Pxl6ZobbMLawwOzAUVaZ6p46fuhW++qesZlC/J4wGHYjgH9pyksI
epm3UJir7abw5KJEubRvaWf8YKdoBUhMy3XLC7xeSBMoVUJpp+v5Qu9Z/by404o9x8W/otfYv04Y
s6cbrOcMd9PZrAS5iZmuZN9UktvGhtcxxunLZA+ASHzxhQygO9vFo0dYuMvKubU4kaaAMz4hezil
i/VisbzXSY9kammSgn3dxrI3AYLulXh5VAdERroZZ7EbtKmwaUCTkwMrnebrFLWH2zwULG5KYMPS
PaWQeiRxuNrXGlGRt0pWCKRWHG5EiV6+Fzwo6WxSMLY1JzzRbRfGv780/MamYt6LmiTqpKbpK5H2
3HE83tmlvhxVzqPItiHXzUB5RIiKRLyjCEycG1Cn7IldYXcAKzFewtuUfhSXRAKZ4pmlZyfdBQuu
0WAjw/AcE1sKV42wMPgFRTROCPBIBgzO1SWC2H2T93d/tFAhCpX2iKPzYoO93TDxVNPCA87gDLXL
Ve7X6wthJUM0yEQf3plGRE+Wa/3eLjWTYmxgE0AhpGNe00/54XCyhz3rWPLE9x1U1uLtwoBmT4WG
gw0MNStMwtLa2vF4KS4hWUDMrYrCgH2wOon7R0urvvYOJlZ66hWk7ESYtYoOoXyLfH9tk2Tyw90J
uFq1eMiaNkTXI1LnRqAemuF8KpqS6oRxBqz4Cl+Mi9c911MAZfeZupkzakGUimdpAdfAA0qMq4QH
YTMCquoZ4vSNWzINgd3y+vUILlFubdtu2oWGnj5yxFZdKAJFb7wrim/WSkIolc+QN4dGkSaQ01vl
r4WiXkcgrYUXWIcH0iLlOxfCR7dG8DnJe8pBV4ePYTXI6ziPavduBugu8nhBIjFY7h1J3mkoq6AD
4ubrgkkHEbwO4ZAOAzON3GJ119rJcrSWjqHwrfTpJ6xuSxL6KDIFEgSr6PtSbKdoHXICvZ+NDd9e
7vfXRL81cyCFxhMj7HU/E2W0fCGMOzeXn+ttvPF+2nHI+XjS7YZqzyro2vqNiDuSs3W9vrG3G5mi
wohgHb+/8IRGmLvk1ytTs2kVM1yYoGS4mPt5IISVwJOd5xHmPa34ove3dxNaVsmy/I2FKJRBXESe
agwmLu0Jj99fYeYO01uizIeLvLVNOksSFCyjqk8IbsgwxY7W54gQ5LxUV+A+wkeqP+kg75c1Wzhh
fMvvEV5TH90Z4AHvVSMz8+Utz5RNAB6521jLPjaYSwb+aSRsxl3WR5naUklEW0CfgbI+8KdPT3dz
C888q1uKwWOcWOseMJJ3oQYah+4zCcPG3FyYcYQ91k0TFwKycdsSJttgYTQ5crlZrw1BRUqBV9JW
Arod3g5NaMrnLnV/B4bqcwUKhSfpGgFkHA3yPmMlgmw1XcPilWMIQw23DouNq1Jtd+a5SbCcTHHR
semV6Gp5L1Ib0eOpo1blNt2+v5TRbC44ksM3BwQIN1yOMumFvvUhezD3LX9atBxjF8QUxR2QIEs3
CztGwZ21RfvRwUFB3KzNEPsNpwBCKOOWSCzMSl0wZW0Xb60aUsk9inbSODcdqOXwsUlRhibV5B9e
R87XpJpjHbF3/Lg8VqODZ5kT75cTrsDezFcwTeP9WjJbrd/VekUae1swbsQhCoKzkK/kW3zKMG0H
C6tSlLpdzyf5puvNlpaJljZZxZGjIKMRaCT0PS7mM9qKLATW2+qWUHU7+IUw8WsICybr1U7n+3fT
nEj/uf4cXE4JM6+PAH7hb0R7CSgnK0sBA+UF8KYbKOxwe3pxe6g68Od94mGDpVfWy1nW0jeA8jId
tFStnkymqI11UwKRJSQyuq87Es5pLdQMdq+OzAM6RGtH06x9qAiWHlsu6k0ZqLY77iRK93zrvBSU
45FC64utebWj7ZJ5uQP2x97bWcLZ/UBs/Za9a6KGYOH762LDlOku2s2NNcaEYck36bq2YBgNIprF
+J69pSPvPKnbOyroCzk7+BJEkHGpZvlMVnjBX4wiLEk+vwEjnYl69UM62XjKDlyqJZ3LUgj9s5PZ
IjYDM0fRvm7g7X60h8FYkjvsfLgbJoanxUwBIDBLHlyXbbUW0E83a1lpMbqId5DL0qfSF8U9qlos
gQ2AqyRQWrtFvfxKMmqKEVmn3cq2633RxlQKEdWj9c4yCWPo3YvAGRG82ro7I5rr5MdBsZjXsOzF
gt4Y/nmV6WWBVuy6yBF/S9rwVb6SM/G5y5YTl5er4yKFvDMirH2TiPQa6JAbCxJQ2rlAXcFyWNw6
002D08BFfu7BlTBo74w60HBdrXl1zrIIzacX14GqynGAimkS2BXVNNy4vL6/jBNmjUgpBbaeMqiB
iAUjNo5CWj8uCRF4jrJTcBryygYF/SF3uGsBImR2OL/obyutV3XBEHza9PLefn8ht8B0XhLRZPGO
8idbJ/K4YT6u31pOGBZ7qF9EGtlmTgQmfXsU1rlpuHX2i5u911udsI4wEEiyF4ngA+6Na5YGtQev
213pFteE/RgiSkN1rgwtiOH9DUtkYKx5u8WGlSlWnuIdfWK+uvOwOGfDul4BzJHYMXvQAbHgyUR0
XKt4LnGbytLynpugErBYROjVxYFaFGwKg1bfpvaeDLyiZyMaYuMyiETlgoYSN+r82d9KkIVXXmnX
WFuHq8cTiL0NEQtpUIimoG091eLCtkxBB3vXAc0vpW/yo1GaDYpQXzwROyYeZ0mlrSFZtQA84G2D
UzS2RPEBs9rSIPTYD1w5Pip6gqagoLFOJoJrTrNeP7UlzXIaldEP1+qqECGqOgw5+oZZWxyBmb6/
RAKj6dl2gbR2vJOIdotnSlt+dhccLfwRTuOsGVfEjGQvt4PW2lgSJvqnwOl1UqNQBoTP86gKoyfn
z1NLMYY2EBzcBWhxPH5kgjyYEBLJwqAwg2zTl89ZTp+C7VoL5xxoSGwV9ONdk1v6sE9IwfOz2fw0
gh8gp5WwXARKFMhBBy0Apu4bewtwRZAnPBU9MtpMmo163JqgpzM4xKzcngYJLfiC4hT8xDVSQgXH
efl+RR7fX3IkCrQUX9F8l8qnrLaoYpHeRbhyHMA5U37OA77ewMekz1siTs+HBX1ueUs+52y09QAd
MF5pbJCjAwF+4WG41cLFGbLMA0KoumM8Oa06i2TTJxY7xc8zY0D5vsgg2Jyq1elbDWp/eqtvy+TW
KdV/uksGU5ctB3tbjFezq9p93HnvNU+N5fbsiSxg+JEJpxE6pA5IrQqvXbsY9zQW9HxaKcNn38Rb
3jZCnG2OxMUblWfgSLfI53+6gz+9JjVlSZfqWrHOjRtf78l1HDd0qDCsonsoUuF1mKzXfDaHQCl7
hiqcGzaEzoWZtWNcRQAmd+9EoHuEXYNt+qDUwVvExrn9fC4yX7Rf84QhYHLnbfyznlf8673BNSRN
GjcwRBfxPz1Fyl/vD1KaXteiKP7wh9/Df3rU9E+Ppf6j51Q/Dwj/+Me/9VTuPxwOmGr58Y9g6A9/
HvvDvw9efnD7vvnrXUjb572fx+vAOf/t6f/P5+3fwz8N+PPof/wcs1BmyQuogn/5s8zJZ6K4f1tb
NlVp5mTTViXZz7P9veeZ/3oZ9T6JlurzxDCNYb/7ASX++gHjv5W6vxfEL9jJz481o+TnseZfMqkb
xZcuzd5gDPJLPv4TPv4U2w9/Cu6HXxzdY868al6jxlmOJuOj5CX0TT/9+Ed3WrO/Rhb8Mzj+H4bK
PRvXasrS/zt4oL8eHn+e+JdDAmN+NSTYX4yIXxHOvxoDn4D+JyCwgHlAIkDwzW/NPgqSj/2SRf45
938x4y9OO44TYI5fVNr/nnbmf18WuGGYf10WuCTJhmUGR/03kPf3Eoczn8z99Tr9g8x9ovyXZo7+
J2SOX5el7/7liYt/muZnafCb2ZOgfvcD88vJ8y/n/OXEiYBJsL/+KpK/lwfqFxPnLw7m19Hmf5Fl
AsjI6z8f///56Xf/RYz9vw0WJ4umpPz1pf5fAEOSvxIw/zHvvxQ0vySsn0Hzc0A//MKI/nnI+Y+F
+F+Lnk/zBFH99B1D/zcgwn4biP5i+n8pln6RzvtLLP26wP7ZkPqL2f85yALuM2v+5cBqPrP8e1GA
EdFvANZPX2H1U6J/mwz5657/t4D4N8L9FUBE/9sv5fp7QPxFn/4vpPa3I/tfAITfTDD/FzhAfysM
fgsdseSvBgH2z2Sj34CBav4f8SINmOdnlf8bqeATULQsVVdIXRQ3WfpbOeFXSJz/JuhfAoXsT/n5
+Xv3DLBilVO1Q/NLgv0Lf4Myv0gq/8dJqv99cPjNhPDPQAP6m8DwK2nh/ycs/LU1/k9Y+M//4eY5
a0HasvnPn/3Tb44/tnPST00V/xNS/3v43/f6X2f5GWz/E3P80wH9j2f8fLPp/8xEU7SDgvgtcyF4
TuZ0jqIpiUR49I/nCtrmf+SYhH7K/vkT/ft/f4b87+G//BbaP/5/wyieXJRWAAA=#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formLabSoftwareDeploymen = New-Object 'System.Windows.Forms.Form'
	$checkboxOverideServiceWindow = New-Object 'System.Windows.Forms.CheckBox'
	$checkboxRequired = New-Object 'System.Windows.Forms.CheckBox'
	$textboxColl = New-Object 'System.Windows.Forms.TextBox'
	$textboxApps = New-Object 'System.Windows.Forms.TextBox'
	$buttonDeploy = New-Object 'System.Windows.Forms.Button'
	$buttonSearchApps = New-Object 'System.Windows.Forms.Button'
	$buttonSearchCollections = New-Object 'System.Windows.Forms.Button'
	$labelSearchApplications = New-Object 'System.Windows.Forms.Label'
	$labelSearchCollections = New-Object 'System.Windows.Forms.Label'
	$listboxApplications = New-Object 'System.Windows.Forms.ListBox'
	$listboxCollections = New-Object 'System.Windows.Forms.ListBox'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formLabSoftwareDeploymen_Load={
		#TODO: Initialize Form Controls here
		
		
		
	
	}
	
	#region Control Helper Functions
	function Load-ListBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
	
		.PARAMETER  ListBox
			The ListBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ListBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ListBox $listBox1 "Red" -Append
			Load-ListBox $listBox1 "White" -Append
			Load-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Load-ListBox $listBox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListBox]$ListBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$listBox.Items.Clear()	
		}
		
		if($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$listBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)	
		}
	
		$listBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$buttonSearchCollections_Click={
		#TODO: Place custom script here
		#empty the box
		$listboxCollections.Items.Clear()
		#Get the Collections
		try
		{ #Get the Collections
			$cols = Get-CMCollection -Name "$($textboxColl.Text)*"
		}
		catch
		{
			#Catch any errors, normally a permisions issue
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show('There was an issue searching for a collection, make sure you have the correct rights', 'Error') # Casting the method to [void] suppresses the output. 
			
		}
		foreach ($Col in $Cols)
		{
			#Loop though each collection and add it to the list
			Load-ListBox -ListBox $listboxCollections -Append -Items $Col.Name
			
		}
	}
	
	$buttonSearchApps_Click={
		#TODO: Place custom script here
		$listboxApplications.Items.Clear()
		$Apps = Get-CMApplication -Name "$($textboxApps.Text)*"
		
		foreach ($App in $Apps)
		{
			
			Load-ListBox -ListBox $listboxApplications -Append -Items $App.LocalizedDisplayName
			
		}
	}
	
	$buttonDeploy_Click={
		#TODO: Place custom script here
		#Make sure the user selected some stuff, we don't present an error because not selecting any thing would not deploy anything
		if ($listboxApplications.SelectedItems -eq "" -or $listboxCollections.SelectedItems -eq "")
		{
			
			return;
			
		}
		
		#Loop though the collections and apps
		foreach ($collection in $listboxCollections.SelectedItems)
		{
			if ($checkboxRequired)
			{
				$deployPurpose = "Required"
			}
			else
			{
				$deployPurpose = "Avaliable"
			}
			foreach ($application in $listboxApplications.SelectedItems)
			{
				
				try
				{
					
					Start-CMApplicationDeployment -CollectionName "$collection" -Name "$application" -DeployAction Install -DeployPurpose "$deployPurpose" -OverrideServiceWindow $checkboxOverideServiceWindow.Checked -RebootOutsideServiceWindow $checkboxOverideServiceWindow.Checked -SendWakeUpPacket $True -UserNotification 'HideAll'
				}
				catch
				{
					#Error out if we can't deploy the app.
					#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
					[void][System.Windows.Forms.MessageBox]::Show("There was an error deploying $application to $collection, ensure you have the correct rights and try again ", 'Error') # Casting the method to [void] suppresses the output. 	
					
				}
				
			}
			
		}
		
	}
	
	
	
		# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formLabSoftwareDeploymen.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_checkboxOverideServiceWindow = $checkboxOverideServiceWindow.Checked
		$script:MainForm_checkboxRequired = $checkboxRequired.Checked
		$script:MainForm_textboxColl = $textboxColl.Text
		$script:MainForm_textboxApps = $textboxApps.Text
		$script:MainForm_listboxApplications = $listboxApplications.SelectedItems
		$script:MainForm_listboxCollections = $listboxCollections.SelectedItems
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonDeploy.remove_Click($buttonDeploy_Click)
			$buttonSearchApps.remove_Click($buttonSearchApps_Click)
			$buttonSearchCollections.remove_Click($buttonSearchCollections_Click)
			$formLabSoftwareDeploymen.remove_Load($formLabSoftwareDeploymen_Load)
			$formLabSoftwareDeploymen.remove_Load($Form_StateCorrection_Load)
			$formLabSoftwareDeploymen.remove_Closing($Form_StoreValues_Closing)
			$formLabSoftwareDeploymen.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formLabSoftwareDeploymen.SuspendLayout()
	#
	# formLabSoftwareDeploymen
	#
	$formLabSoftwareDeploymen.Controls.Add($checkboxOverideServiceWindow)
	$formLabSoftwareDeploymen.Controls.Add($checkboxRequired)
	$formLabSoftwareDeploymen.Controls.Add($textboxColl)
	$formLabSoftwareDeploymen.Controls.Add($textboxApps)
	$formLabSoftwareDeploymen.Controls.Add($buttonDeploy)
	$formLabSoftwareDeploymen.Controls.Add($buttonSearchApps)
	$formLabSoftwareDeploymen.Controls.Add($buttonSearchCollections)
	$formLabSoftwareDeploymen.Controls.Add($labelSearchApplications)
	$formLabSoftwareDeploymen.Controls.Add($labelSearchCollections)
	$formLabSoftwareDeploymen.Controls.Add($listboxApplications)
	$formLabSoftwareDeploymen.Controls.Add($listboxCollections)
	$formLabSoftwareDeploymen.AutoScaleDimensions = '6, 13'
	$formLabSoftwareDeploymen.AutoScaleMode = 'Font'
	$formLabSoftwareDeploymen.ClientSize = '870, 254'
	#region Binary Data
	$formLabSoftwareDeploymen.Icon = [System.Convert]::FromBase64String('
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')
	#endregion
	$formLabSoftwareDeploymen.Name = 'formLabSoftwareDeploymen'
	$formLabSoftwareDeploymen.Text = 'Lab Software Deployment Tool'
	$formLabSoftwareDeploymen.add_Load($formLabSoftwareDeploymen_Load)
	#
	# checkboxOverideServiceWindow
	#
	$checkboxOverideServiceWindow.Location = '722, 144'
	$checkboxOverideServiceWindow.Name = 'checkboxOverideServiceWindow'
	$checkboxOverideServiceWindow.Size = '150, 24'
	$checkboxOverideServiceWindow.TabIndex = 10
	$checkboxOverideServiceWindow.Text = 'Overide Service Window'
	$checkboxOverideServiceWindow.UseVisualStyleBackColor = $True
	#
	# checkboxRequired
	#
	$checkboxRequired.Location = '722, 114'
	$checkboxRequired.Name = 'checkboxRequired'
	$checkboxRequired.Size = '128, 24'
	$checkboxRequired.TabIndex = 9
	$checkboxRequired.Text = 'Required'
	$checkboxRequired.UseVisualStyleBackColor = $True
	#
	# textboxColl
	#
	$textboxColl.Location = '12, 29'
	$textboxColl.Name = 'textboxColl'
	$textboxColl.Size = '334, 20'
	$textboxColl.TabIndex = 8
	#
	# textboxApps
	#
	$textboxApps.AcceptsTab = $True
	$textboxApps.Location = '382, 28'
	$textboxApps.Name = 'textboxApps'
	$textboxApps.Size = '334, 20'
	$textboxApps.TabIndex = 7
	#
	# buttonDeploy
	#
	$buttonDeploy.Location = '746, 84'
	$buttonDeploy.Name = 'buttonDeploy'
	$buttonDeploy.Size = '106, 23'
	$buttonDeploy.TabIndex = 6
	$buttonDeploy.Text = 'Deploy'
	$buttonDeploy.UseVisualStyleBackColor = $True
	$buttonDeploy.add_Click($buttonDeploy_Click)
	#
	# buttonSearchApps
	#
	$buttonSearchApps.Location = '746, 55'
	$buttonSearchApps.Name = 'buttonSearchApps'
	$buttonSearchApps.Size = '106, 23'
	$buttonSearchApps.TabIndex = 5
	$buttonSearchApps.Text = 'Search Apps'
	$buttonSearchApps.UseVisualStyleBackColor = $True
	$buttonSearchApps.add_Click($buttonSearchApps_Click)
	#
	# buttonSearchCollections
	#
	$buttonSearchCollections.Location = '746, 25'
	$buttonSearchCollections.Name = 'buttonSearchCollections'
	$buttonSearchCollections.Size = '106, 23'
	$buttonSearchCollections.TabIndex = 4
	$buttonSearchCollections.Text = 'Search Collections'
	$buttonSearchCollections.UseVisualStyleBackColor = $True
	$buttonSearchCollections.add_Click($buttonSearchCollections_Click)
	#
	# labelSearchApplications
	#
	$labelSearchApplications.AutoSize = $True
	$labelSearchApplications.Location = '382, 7'
	$labelSearchApplications.Name = 'labelSearchApplications'
	$labelSearchApplications.Size = '101, 13'
	$labelSearchApplications.TabIndex = 3
	$labelSearchApplications.Text = 'Search Applications'
	#
	# labelSearchCollections
	#
	$labelSearchCollections.AutoSize = $True
	$labelSearchCollections.Location = '12, 7'
	$labelSearchCollections.Name = 'labelSearchCollections'
	$labelSearchCollections.Size = '95, 13'
	$labelSearchCollections.TabIndex = 2
	$labelSearchCollections.Text = 'Search Collections'
	#
	# listboxApplications
	#
	$listboxApplications.FormattingEnabled = $True
	$listboxApplications.Location = '382, 55'
	$listboxApplications.Name = 'listboxApplications'
	$listboxApplications.SelectionMode = 'MultiSimple'
	$listboxApplications.Size = '334, 186'
	$listboxApplications.TabIndex = 1
	#
	# listboxCollections
	#
	$listboxCollections.FormattingEnabled = $True
	$listboxCollections.Location = '12, 55'
	$listboxCollections.Name = 'listboxCollections'
	$listboxCollections.SelectionMode = 'MultiSimple'
	$listboxCollections.Size = '334, 186'
	$listboxCollections.TabIndex = 0
	$formLabSoftwareDeploymen.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formLabSoftwareDeploymen.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formLabSoftwareDeploymen.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formLabSoftwareDeploymen.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$formLabSoftwareDeploymen.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $formLabSoftwareDeploymen.ShowDialog()

}
#endregion Source: MainForm.psf

#Start the application
Main ($CommandLine)
